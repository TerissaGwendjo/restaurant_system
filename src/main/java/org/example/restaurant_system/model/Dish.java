package org.example.restaurant_system.model;
import jakarta.persistence.*;
import jakarta.persistence.Entity;

@Entity
@Table(name = "dishes")
public class Dish {
    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE)
    @Column (name = "id", nullable = false)
    private Long id;

    @Column (nullable = false)
    private String name;

    @Column (nullable = false)
    private Double price;

    @Column (nullable = false)
    private Integer calories;

    @Column (nullable = false)
    private String ingredients;

//Constructors

    public Dish() {
    }

    public Dish(String name, Double price, Integer calories, String ingredients) {
        this.name = name;
        this.price = price;
        this.calories = calories;
        this.ingredients = ingredients;
    }

    //Normally we don't need this constructor but such a constructor is used to create a new object where the id wasn't
    //autogenerated or used to read while the other constructor is used to write
    public Dish(Long id, String name, Double price, Integer calories, String ingredients) {
        this.id = id;
        this.name = name;
        this.price = price;
        this.calories = calories;
        this.ingredients = ingredients;
    }

    //Getters and setters
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Double getPrice() {
        return price;
    }

    public void setPrice(Double price) {
        this.price = price;
    }

    public Integer getCalories() {
        return calories;
    }

    public void setCalories(Integer calories) {
        this.calories = calories;
    }

    public String getIngredients() {
        return ingredients;
    }

    public void setIngredients(String ingredients) {
        this.ingredients = ingredients;
    }


}

/*
* In summary, GenerationType.SEQUENCE and GenerationType.IDENTITY are both strategies for generating primary key values,
*  but they use different mechanisms: sequence objects for the former and auto-incrementing columns for the latter.*/
